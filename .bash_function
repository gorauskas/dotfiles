# Bourne Again Shell Init Function File
# Jonas Gorauskas - 2007.03.17 22:00:00
# Modified: 2014-03-22 01:27:32

# Find a process by name
function psgrep() {
    ps aux | grep $1 | grep -v grep
}

# Kill a process by Name
function pskill() {
    local pid
    pid=$(ps ax | grep $1 | grep -v grep | awk '{ print $1 }')
    echo -n "Killing $1 (Process $pid) ..."
    kill -9 $pid
    echo "Slaughtered ..."
}

# Watch output written to file
function watch() {
    if [ $# -ne 1 ]; then
        tail -f nohup.out
    else
        tail -f $1
    fi
}

function rot13() {
    if [ $# = 0 ] ; then
        tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]"
    else
        tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]" < $1
    fi
}

function chmog() {
    if [ $# -ne 4 ]; then
        echo "usage: chmog mode owner group file"
        return 1
    else
        chmod $1 $4
        chown $2 $4
        chgrp $3 $4
    fi
}

# requires superuser access in order to look at
# all nooks and crannies
function findall() {
    sudo find / -name ${1} -print ;
}

# Display Environment Information
function envinfo() {
    local i
    local is
    let ic=0

    for i in "${BASH_VERSINFO[@]}";
    do
        if [ $ic = 5 ]; then
            is="$is on a $i"
        else
            if [ $ic = 0 ]; then
                is="Bash Version $i"
            elif [ $ic = 1 ]; then
                is="$is.$i"
            elif [ $ic = 2 ]; then
                is="$is.$i("
            elif [ $ic = 3 ]; then
                is="$is$i)/"
            elif [ $ic = 4 ]; then
                is="$is$i"
            fi
        fi
        let ic=$ic+1
    done
    echo $is
}

# Open any document with any application
function open () {
    T=`xdg-mime query filetype $1`
    echo "Opening file" $1 "of type" $T "with" `xdg-mime query default $T`
    xdg-open $1
    echo "Open done!"
}

# cd and ls in one
function cl () {
    if [ -d "$1" ]; then
        cd "$1"
        dir
    else
        echo "bash: cl '%1' - Directory not found"
    fi
}

# make and cd into directory
function mcd () {
    mkdir -p "$1" && cd "$1";
}

# get your current internet ip
function myip () {
    echo `curl -s whatismyip.akamai.com`
}

# Git commit and push - CAP
function cap () {
    git add . ;
    git commit -m "$1" ;
    git pull ;
    git push ;
}

# Git compare local to remote - GDR git diff remote
function gdr () {
    git fetch origin ;
    git diff $1..origin/$1;
}
