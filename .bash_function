# Bourne Again Shell Init Function File
# Jonas Gorauskas - 2007.03.17 22:00:00
# Modified: 2013-04-29 01:03 by jgg

# Find a process by name
function psgrep() {
    ps aux | grep $1 | grep -v grep
}

# Kill a process by Name
function pskill() {
    local pid
    pid=$(ps ax | grep $1 | grep -v grep | awk '{ print $1 }')
    echo -n "Killing $1 (Process $pid) ..."
    kill -9 $pid
    echo "Slaughtered ..."
}

# Watch output written to file
function watch() {
    if [ $# -ne 1 ]; then
        tail -f nohup.out
    else
        tail -f $1
    fi
}

function rot13() {
    if [ $# = 0 ] ; then
        tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]"
    else
        tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]" < $1
    fi
}

# requires superuser access in order to look at
# all nooks and crannies
function findall() {
    sudo find / -name ${1} -print ;
}

# Display Environment Information
function envinfo() {
    local i
    local is
    let ic=0

    for i in "${BASH_VERSINFO[@]}";
    do
        if [ $ic = 5 ]; then
            is="$is on a $i"
        else
            if [ $ic = 0 ]; then
                is="Bash Version $i"
            elif [ $ic = 1 ]; then
                is="$is.$i"
            elif [ $ic = 2 ]; then
                is="$is.$i("
            elif [ $ic = 3 ]; then
                is="$is$i)/"
            elif [ $ic = 4 ]; then
                is="$is$i"
            fi
        fi
        let ic=$ic+1
    done
    echo $is
}

# Open any document with any application
function open() {
    TEMP = 'getopt -o a: -- "$@"'
    if [ $? != 0 ] ; then exit 1 ; fi
    eval set - "$TEMP"
    while true ; do
        case "$1" in
            -a) COMMAND=$2 ; shift 2;;
            -) shift ; break ;;
            *) echo "should not happen" ; exit 1 ;;
        esac
    done
    if [$COMMAND]; then
        nohup $COMMAND $@ > ~/.s1 2> ~/.s2 &
    else
        /usr/bin/xdg-open $@
    fi

}

# cd and ls in one
function cl() {
    if [ -d "$1" ]; then
        cd "$1"
        dir
    else
        echo "bash: cl '%1' - Directory not found"
    fi
}

# The following function will extract a wide range of compressed file types.
function extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
        *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
               c='bsdtar xvf';;
        *.7z)  c='7z x';;
        *.Z)   c='uncompress';;
        *.bz2) c='bunzip2';;
        *.exe) c='cabextract';;
        *.gz)  c='gunzip';;
        *.rar) c='unrar x';;
        *.xz)  c='unxz';;
        *.zip) c='unzip';;
        *)     echo "$0: unrecognized file extension: \`$i'" >&2
               continue;;
        esac

        command $c "$i"
        e=$?
    done

    return $e
}
